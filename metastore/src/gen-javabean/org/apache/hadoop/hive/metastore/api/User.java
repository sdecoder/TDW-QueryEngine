/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.apache.hadoop.hive.metastore.api;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import org.apache.log4j.Logger;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;

public class User implements TBase, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("User");
  private static final TField USER_NAME_FIELD_DESC = new TField("userName", TType.STRING, (short)1);
  private static final TField PLAY_ROLES_FIELD_DESC = new TField("playRoles", TType.LIST, (short)2);
  private static final TField SELECT_PRIV_FIELD_DESC = new TField("selectPriv", TType.BOOL, (short)3);
  private static final TField INSERT_PRIV_FIELD_DESC = new TField("insertPriv", TType.BOOL, (short)4);
  private static final TField INDEX_PRIV_FIELD_DESC = new TField("indexPriv", TType.BOOL, (short)5);
  private static final TField CREATE_PRIV_FIELD_DESC = new TField("createPriv", TType.BOOL, (short)6);
  private static final TField DROP_PRIV_FIELD_DESC = new TField("dropPriv", TType.BOOL, (short)7);
  private static final TField DELETE_PRIV_FIELD_DESC = new TField("deletePriv", TType.BOOL, (short)8);
  private static final TField ALTER_PRIV_FIELD_DESC = new TField("alterPriv", TType.BOOL, (short)9);
  private static final TField UPDATE_PRIV_FIELD_DESC = new TField("updatePriv", TType.BOOL, (short)10);
  private static final TField CREATEVIEW_PRIV_FIELD_DESC = new TField("createviewPriv", TType.BOOL, (short)11);
  private static final TField SHOWVIEW_PRIV_FIELD_DESC = new TField("showviewPriv", TType.BOOL, (short)12);
  private static final TField DBA_PRIV_FIELD_DESC = new TField("dbaPriv", TType.BOOL, (short)13);

  private String userName;
  public static final int USERNAME = 1;
  private List<String> playRoles;
  public static final int PLAYROLES = 2;
  private boolean selectPriv;
  public static final int SELECTPRIV = 3;
  private boolean insertPriv;
  public static final int INSERTPRIV = 4;
  private boolean indexPriv;
  public static final int INDEXPRIV = 5;
  private boolean createPriv;
  public static final int CREATEPRIV = 6;
  private boolean dropPriv;
  public static final int DROPPRIV = 7;
  private boolean deletePriv;
  public static final int DELETEPRIV = 8;
  private boolean alterPriv;
  public static final int ALTERPRIV = 9;
  private boolean updatePriv;
  public static final int UPDATEPRIV = 10;
  private boolean createviewPriv;
  public static final int CREATEVIEWPRIV = 11;
  private boolean showviewPriv;
  public static final int SHOWVIEWPRIV = 12;
  private boolean dbaPriv;
  public static final int DBAPRIV = 13;

  private final Isset __isset = new Isset();
  private static final class Isset implements java.io.Serializable {
    public boolean selectPriv = false;
    public boolean insertPriv = false;
    public boolean indexPriv = false;
    public boolean createPriv = false;
    public boolean dropPriv = false;
    public boolean deletePriv = false;
    public boolean alterPriv = false;
    public boolean updatePriv = false;
    public boolean createviewPriv = false;
    public boolean showviewPriv = false;
    public boolean dbaPriv = false;
  }

  public static final Map<Integer, FieldMetaData> metaDataMap = Collections.unmodifiableMap(new HashMap<Integer, FieldMetaData>() {{
    put(USERNAME, new FieldMetaData("userName", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    put(PLAYROLES, new FieldMetaData("playRoles", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    put(SELECTPRIV, new FieldMetaData("selectPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(INSERTPRIV, new FieldMetaData("insertPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(INDEXPRIV, new FieldMetaData("indexPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(CREATEPRIV, new FieldMetaData("createPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(DROPPRIV, new FieldMetaData("dropPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(DELETEPRIV, new FieldMetaData("deletePriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(ALTERPRIV, new FieldMetaData("alterPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(UPDATEPRIV, new FieldMetaData("updatePriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(CREATEVIEWPRIV, new FieldMetaData("createviewPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(SHOWVIEWPRIV, new FieldMetaData("showviewPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(DBAPRIV, new FieldMetaData("dbaPriv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
  }});

  static {
    FieldMetaData.addStructMetaDataMap(User.class, metaDataMap);
  }

  public User() {
  }

  public User(
    String userName,
    List<String> playRoles,
    boolean selectPriv,
    boolean insertPriv,
    boolean indexPriv,
    boolean createPriv,
    boolean dropPriv,
    boolean deletePriv,
    boolean alterPriv,
    boolean updatePriv,
    boolean createviewPriv,
    boolean showviewPriv,
    boolean dbaPriv)
  {
    this();
    this.userName = userName;
    this.playRoles = playRoles;
    this.selectPriv = selectPriv;
    this.__isset.selectPriv = true;
    this.insertPriv = insertPriv;
    this.__isset.insertPriv = true;
    this.indexPriv = indexPriv;
    this.__isset.indexPriv = true;
    this.createPriv = createPriv;
    this.__isset.createPriv = true;
    this.dropPriv = dropPriv;
    this.__isset.dropPriv = true;
    this.deletePriv = deletePriv;
    this.__isset.deletePriv = true;
    this.alterPriv = alterPriv;
    this.__isset.alterPriv = true;
    this.updatePriv = updatePriv;
    this.__isset.updatePriv = true;
    this.createviewPriv = createviewPriv;
    this.__isset.createviewPriv = true;
    this.showviewPriv = showviewPriv;
    this.__isset.showviewPriv = true;
    this.dbaPriv = dbaPriv;
    this.__isset.dbaPriv = true;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public User(User other) {
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetPlayRoles()) {
      List<String> __this__playRoles = new ArrayList<String>();
      for (String other_element : other.playRoles) {
        __this__playRoles.add(other_element);
      }
      this.playRoles = __this__playRoles;
    }
    __isset.selectPriv = other.__isset.selectPriv;
    this.selectPriv = other.selectPriv;
    __isset.insertPriv = other.__isset.insertPriv;
    this.insertPriv = other.insertPriv;
    __isset.indexPriv = other.__isset.indexPriv;
    this.indexPriv = other.indexPriv;
    __isset.createPriv = other.__isset.createPriv;
    this.createPriv = other.createPriv;
    __isset.dropPriv = other.__isset.dropPriv;
    this.dropPriv = other.dropPriv;
    __isset.deletePriv = other.__isset.deletePriv;
    this.deletePriv = other.deletePriv;
    __isset.alterPriv = other.__isset.alterPriv;
    this.alterPriv = other.alterPriv;
    __isset.updatePriv = other.__isset.updatePriv;
    this.updatePriv = other.updatePriv;
    __isset.createviewPriv = other.__isset.createviewPriv;
    this.createviewPriv = other.createviewPriv;
    __isset.showviewPriv = other.__isset.showviewPriv;
    this.showviewPriv = other.showviewPriv;
    __isset.dbaPriv = other.__isset.dbaPriv;
    this.dbaPriv = other.dbaPriv;
  }

  @Override
  public User clone() {
    return new User(this);
  }

  public String getUserName() {
    return this.userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  // Returns true if field userName is set (has been asigned a value) and false otherwise
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public int getPlayRolesSize() {
    return (this.playRoles == null) ? 0 : this.playRoles.size();
  }

  public java.util.Iterator<String> getPlayRolesIterator() {
    return (this.playRoles == null) ? null : this.playRoles.iterator();
  }

  public void addToPlayRoles(String elem) {
    if (this.playRoles == null) {
      this.playRoles = new ArrayList<String>();
    }
    this.playRoles.add(elem);
  }

  public List<String> getPlayRoles() {
    return this.playRoles;
  }

  public void setPlayRoles(List<String> playRoles) {
    this.playRoles = playRoles;
  }

  public void unsetPlayRoles() {
    this.playRoles = null;
  }

  // Returns true if field playRoles is set (has been asigned a value) and false otherwise
  public boolean isSetPlayRoles() {
    return this.playRoles != null;
  }

  public boolean isSelectPriv() {
    return this.selectPriv;
  }

  public void setSelectPriv(boolean selectPriv) {
    this.selectPriv = selectPriv;
    this.__isset.selectPriv = true;
  }

  public void unsetSelectPriv() {
    this.__isset.selectPriv = false;
  }

  // Returns true if field selectPriv is set (has been asigned a value) and false otherwise
  public boolean isSetSelectPriv() {
    return this.__isset.selectPriv;
  }

  public boolean isInsertPriv() {
    return this.insertPriv;
  }

  public void setInsertPriv(boolean insertPriv) {
    this.insertPriv = insertPriv;
    this.__isset.insertPriv = true;
  }

  public void unsetInsertPriv() {
    this.__isset.insertPriv = false;
  }

  // Returns true if field insertPriv is set (has been asigned a value) and false otherwise
  public boolean isSetInsertPriv() {
    return this.__isset.insertPriv;
  }

  public boolean isIndexPriv() {
    return this.indexPriv;
  }

  public void setIndexPriv(boolean indexPriv) {
    this.indexPriv = indexPriv;
    this.__isset.indexPriv = true;
  }

  public void unsetIndexPriv() {
    this.__isset.indexPriv = false;
  }

  // Returns true if field indexPriv is set (has been asigned a value) and false otherwise
  public boolean isSetIndexPriv() {
    return this.__isset.indexPriv;
  }

  public boolean isCreatePriv() {
    return this.createPriv;
  }

  public void setCreatePriv(boolean createPriv) {
    this.createPriv = createPriv;
    this.__isset.createPriv = true;
  }

  public void unsetCreatePriv() {
    this.__isset.createPriv = false;
  }

  // Returns true if field createPriv is set (has been asigned a value) and false otherwise
  public boolean isSetCreatePriv() {
    return this.__isset.createPriv;
  }

  public boolean isDropPriv() {
    return this.dropPriv;
  }

  public void setDropPriv(boolean dropPriv) {
    this.dropPriv = dropPriv;
    this.__isset.dropPriv = true;
  }

  public void unsetDropPriv() {
    this.__isset.dropPriv = false;
  }

  // Returns true if field dropPriv is set (has been asigned a value) and false otherwise
  public boolean isSetDropPriv() {
    return this.__isset.dropPriv;
  }

  public boolean isDeletePriv() {
    return this.deletePriv;
  }

  public void setDeletePriv(boolean deletePriv) {
    this.deletePriv = deletePriv;
    this.__isset.deletePriv = true;
  }

  public void unsetDeletePriv() {
    this.__isset.deletePriv = false;
  }

  // Returns true if field deletePriv is set (has been asigned a value) and false otherwise
  public boolean isSetDeletePriv() {
    return this.__isset.deletePriv;
  }

  public boolean isAlterPriv() {
    return this.alterPriv;
  }

  public void setAlterPriv(boolean alterPriv) {
    this.alterPriv = alterPriv;
    this.__isset.alterPriv = true;
  }

  public void unsetAlterPriv() {
    this.__isset.alterPriv = false;
  }

  // Returns true if field alterPriv is set (has been asigned a value) and false otherwise
  public boolean isSetAlterPriv() {
    return this.__isset.alterPriv;
  }

  public boolean isUpdatePriv() {
    return this.updatePriv;
  }

  public void setUpdatePriv(boolean updatePriv) {
    this.updatePriv = updatePriv;
    this.__isset.updatePriv = true;
  }

  public void unsetUpdatePriv() {
    this.__isset.updatePriv = false;
  }

  // Returns true if field updatePriv is set (has been asigned a value) and false otherwise
  public boolean isSetUpdatePriv() {
    return this.__isset.updatePriv;
  }

  public boolean isCreateviewPriv() {
    return this.createviewPriv;
  }

  public void setCreateviewPriv(boolean createviewPriv) {
    this.createviewPriv = createviewPriv;
    this.__isset.createviewPriv = true;
  }

  public void unsetCreateviewPriv() {
    this.__isset.createviewPriv = false;
  }

  // Returns true if field createviewPriv is set (has been asigned a value) and false otherwise
  public boolean isSetCreateviewPriv() {
    return this.__isset.createviewPriv;
  }

  public boolean isShowviewPriv() {
    return this.showviewPriv;
  }

  public void setShowviewPriv(boolean showviewPriv) {
    this.showviewPriv = showviewPriv;
    this.__isset.showviewPriv = true;
  }

  public void unsetShowviewPriv() {
    this.__isset.showviewPriv = false;
  }

  // Returns true if field showviewPriv is set (has been asigned a value) and false otherwise
  public boolean isSetShowviewPriv() {
    return this.__isset.showviewPriv;
  }

  public boolean isDbaPriv() {
    return this.dbaPriv;
  }

  public void setDbaPriv(boolean dbaPriv) {
    this.dbaPriv = dbaPriv;
    this.__isset.dbaPriv = true;
  }

  public void unsetDbaPriv() {
    this.__isset.dbaPriv = false;
  }

  // Returns true if field dbaPriv is set (has been asigned a value) and false otherwise
  public boolean isSetDbaPriv() {
    return this.__isset.dbaPriv;
  }

  public void setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
    case USERNAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case PLAYROLES:
      if (value == null) {
        unsetPlayRoles();
      } else {
        setPlayRoles((List<String>)value);
      }
      break;

    case SELECTPRIV:
      if (value == null) {
        unsetSelectPriv();
      } else {
        setSelectPriv((Boolean)value);
      }
      break;

    case INSERTPRIV:
      if (value == null) {
        unsetInsertPriv();
      } else {
        setInsertPriv((Boolean)value);
      }
      break;

    case INDEXPRIV:
      if (value == null) {
        unsetIndexPriv();
      } else {
        setIndexPriv((Boolean)value);
      }
      break;

    case CREATEPRIV:
      if (value == null) {
        unsetCreatePriv();
      } else {
        setCreatePriv((Boolean)value);
      }
      break;

    case DROPPRIV:
      if (value == null) {
        unsetDropPriv();
      } else {
        setDropPriv((Boolean)value);
      }
      break;

    case DELETEPRIV:
      if (value == null) {
        unsetDeletePriv();
      } else {
        setDeletePriv((Boolean)value);
      }
      break;

    case ALTERPRIV:
      if (value == null) {
        unsetAlterPriv();
      } else {
        setAlterPriv((Boolean)value);
      }
      break;

    case UPDATEPRIV:
      if (value == null) {
        unsetUpdatePriv();
      } else {
        setUpdatePriv((Boolean)value);
      }
      break;

    case CREATEVIEWPRIV:
      if (value == null) {
        unsetCreateviewPriv();
      } else {
        setCreateviewPriv((Boolean)value);
      }
      break;

    case SHOWVIEWPRIV:
      if (value == null) {
        unsetShowviewPriv();
      } else {
        setShowviewPriv((Boolean)value);
      }
      break;

    case DBAPRIV:
      if (value == null) {
        unsetDbaPriv();
      } else {
        setDbaPriv((Boolean)value);
      }
      break;

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  public Object getFieldValue(int fieldID) {
    switch (fieldID) {
    case USERNAME:
      return getUserName();

    case PLAYROLES:
      return getPlayRoles();

    case SELECTPRIV:
      return new Boolean(isSelectPriv());

    case INSERTPRIV:
      return new Boolean(isInsertPriv());

    case INDEXPRIV:
      return new Boolean(isIndexPriv());

    case CREATEPRIV:
      return new Boolean(isCreatePriv());

    case DROPPRIV:
      return new Boolean(isDropPriv());

    case DELETEPRIV:
      return new Boolean(isDeletePriv());

    case ALTERPRIV:
      return new Boolean(isAlterPriv());

    case UPDATEPRIV:
      return new Boolean(isUpdatePriv());

    case CREATEVIEWPRIV:
      return new Boolean(isCreateviewPriv());

    case SHOWVIEWPRIV:
      return new Boolean(isShowviewPriv());

    case DBAPRIV:
      return new Boolean(isDbaPriv());

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise
  public boolean isSet(int fieldID) {
    switch (fieldID) {
    case USERNAME:
      return isSetUserName();
    case PLAYROLES:
      return isSetPlayRoles();
    case SELECTPRIV:
      return isSetSelectPriv();
    case INSERTPRIV:
      return isSetInsertPriv();
    case INDEXPRIV:
      return isSetIndexPriv();
    case CREATEPRIV:
      return isSetCreatePriv();
    case DROPPRIV:
      return isSetDropPriv();
    case DELETEPRIV:
      return isSetDeletePriv();
    case ALTERPRIV:
      return isSetAlterPriv();
    case UPDATEPRIV:
      return isSetUpdatePriv();
    case CREATEVIEWPRIV:
      return isSetCreateviewPriv();
    case SHOWVIEWPRIV:
      return isSetShowviewPriv();
    case DBAPRIV:
      return isSetDbaPriv();
    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof User)
      return this.equals((User)that);
    return false;
  }

  public boolean equals(User that) {
    if (that == null)
      return false;

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_playRoles = true && this.isSetPlayRoles();
    boolean that_present_playRoles = true && that.isSetPlayRoles();
    if (this_present_playRoles || that_present_playRoles) {
      if (!(this_present_playRoles && that_present_playRoles))
        return false;
      if (!this.playRoles.equals(that.playRoles))
        return false;
    }

    boolean this_present_selectPriv = true;
    boolean that_present_selectPriv = true;
    if (this_present_selectPriv || that_present_selectPriv) {
      if (!(this_present_selectPriv && that_present_selectPriv))
        return false;
      if (this.selectPriv != that.selectPriv)
        return false;
    }

    boolean this_present_insertPriv = true;
    boolean that_present_insertPriv = true;
    if (this_present_insertPriv || that_present_insertPriv) {
      if (!(this_present_insertPriv && that_present_insertPriv))
        return false;
      if (this.insertPriv != that.insertPriv)
        return false;
    }

    boolean this_present_indexPriv = true;
    boolean that_present_indexPriv = true;
    if (this_present_indexPriv || that_present_indexPriv) {
      if (!(this_present_indexPriv && that_present_indexPriv))
        return false;
      if (this.indexPriv != that.indexPriv)
        return false;
    }

    boolean this_present_createPriv = true;
    boolean that_present_createPriv = true;
    if (this_present_createPriv || that_present_createPriv) {
      if (!(this_present_createPriv && that_present_createPriv))
        return false;
      if (this.createPriv != that.createPriv)
        return false;
    }

    boolean this_present_dropPriv = true;
    boolean that_present_dropPriv = true;
    if (this_present_dropPriv || that_present_dropPriv) {
      if (!(this_present_dropPriv && that_present_dropPriv))
        return false;
      if (this.dropPriv != that.dropPriv)
        return false;
    }

    boolean this_present_deletePriv = true;
    boolean that_present_deletePriv = true;
    if (this_present_deletePriv || that_present_deletePriv) {
      if (!(this_present_deletePriv && that_present_deletePriv))
        return false;
      if (this.deletePriv != that.deletePriv)
        return false;
    }

    boolean this_present_alterPriv = true;
    boolean that_present_alterPriv = true;
    if (this_present_alterPriv || that_present_alterPriv) {
      if (!(this_present_alterPriv && that_present_alterPriv))
        return false;
      if (this.alterPriv != that.alterPriv)
        return false;
    }

    boolean this_present_updatePriv = true;
    boolean that_present_updatePriv = true;
    if (this_present_updatePriv || that_present_updatePriv) {
      if (!(this_present_updatePriv && that_present_updatePriv))
        return false;
      if (this.updatePriv != that.updatePriv)
        return false;
    }

    boolean this_present_createviewPriv = true;
    boolean that_present_createviewPriv = true;
    if (this_present_createviewPriv || that_present_createviewPriv) {
      if (!(this_present_createviewPriv && that_present_createviewPriv))
        return false;
      if (this.createviewPriv != that.createviewPriv)
        return false;
    }

    boolean this_present_showviewPriv = true;
    boolean that_present_showviewPriv = true;
    if (this_present_showviewPriv || that_present_showviewPriv) {
      if (!(this_present_showviewPriv && that_present_showviewPriv))
        return false;
      if (this.showviewPriv != that.showviewPriv)
        return false;
    }

    boolean this_present_dbaPriv = true;
    boolean that_present_dbaPriv = true;
    if (this_present_dbaPriv || that_present_dbaPriv) {
      if (!(this_present_dbaPriv && that_present_dbaPriv))
        return false;
      if (this.dbaPriv != that.dbaPriv)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case USERNAME:
          if (field.type == TType.STRING) {
            this.userName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PLAYROLES:
          if (field.type == TType.LIST) {
            {
              TList _list53 = iprot.readListBegin();
              this.playRoles = new ArrayList<String>(_list53.size);
              for (int _i54 = 0; _i54 < _list53.size; ++_i54)
              {
                String _elem55;
                _elem55 = iprot.readString();
                this.playRoles.add(_elem55);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SELECTPRIV:
          if (field.type == TType.BOOL) {
            this.selectPriv = iprot.readBool();
            this.__isset.selectPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case INSERTPRIV:
          if (field.type == TType.BOOL) {
            this.insertPriv = iprot.readBool();
            this.__isset.insertPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case INDEXPRIV:
          if (field.type == TType.BOOL) {
            this.indexPriv = iprot.readBool();
            this.__isset.indexPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CREATEPRIV:
          if (field.type == TType.BOOL) {
            this.createPriv = iprot.readBool();
            this.__isset.createPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DROPPRIV:
          if (field.type == TType.BOOL) {
            this.dropPriv = iprot.readBool();
            this.__isset.dropPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DELETEPRIV:
          if (field.type == TType.BOOL) {
            this.deletePriv = iprot.readBool();
            this.__isset.deletePriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case ALTERPRIV:
          if (field.type == TType.BOOL) {
            this.alterPriv = iprot.readBool();
            this.__isset.alterPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case UPDATEPRIV:
          if (field.type == TType.BOOL) {
            this.updatePriv = iprot.readBool();
            this.__isset.updatePriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CREATEVIEWPRIV:
          if (field.type == TType.BOOL) {
            this.createviewPriv = iprot.readBool();
            this.__isset.createviewPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SHOWVIEWPRIV:
          if (field.type == TType.BOOL) {
            this.showviewPriv = iprot.readBool();
            this.__isset.showviewPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DBAPRIV:
          if (field.type == TType.BOOL) {
            this.dbaPriv = iprot.readBool();
            this.__isset.dbaPriv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.userName != null) {
      oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
      oprot.writeString(this.userName);
      oprot.writeFieldEnd();
    }
    if (this.playRoles != null) {
      oprot.writeFieldBegin(PLAY_ROLES_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.playRoles.size()));
        for (String _iter56 : this.playRoles)        {
          oprot.writeString(_iter56);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(SELECT_PRIV_FIELD_DESC);
    oprot.writeBool(this.selectPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(INSERT_PRIV_FIELD_DESC);
    oprot.writeBool(this.insertPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(INDEX_PRIV_FIELD_DESC);
    oprot.writeBool(this.indexPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CREATE_PRIV_FIELD_DESC);
    oprot.writeBool(this.createPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(DROP_PRIV_FIELD_DESC);
    oprot.writeBool(this.dropPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(DELETE_PRIV_FIELD_DESC);
    oprot.writeBool(this.deletePriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ALTER_PRIV_FIELD_DESC);
    oprot.writeBool(this.alterPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(UPDATE_PRIV_FIELD_DESC);
    oprot.writeBool(this.updatePriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CREATEVIEW_PRIV_FIELD_DESC);
    oprot.writeBool(this.createviewPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(SHOWVIEW_PRIV_FIELD_DESC);
    oprot.writeBool(this.showviewPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(DBA_PRIV_FIELD_DESC);
    oprot.writeBool(this.dbaPriv);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("User(");
    boolean first = true;

    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("playRoles:");
    if (this.playRoles == null) {
      sb.append("null");
    } else {
      sb.append(this.playRoles);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("selectPriv:");
    sb.append(this.selectPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("insertPriv:");
    sb.append(this.insertPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("indexPriv:");
    sb.append(this.indexPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createPriv:");
    sb.append(this.createPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dropPriv:");
    sb.append(this.dropPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("deletePriv:");
    sb.append(this.deletePriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("alterPriv:");
    sb.append(this.alterPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatePriv:");
    sb.append(this.updatePriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createviewPriv:");
    sb.append(this.createviewPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("showviewPriv:");
    sb.append(this.showviewPriv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dbaPriv:");
    sb.append(this.dbaPriv);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

